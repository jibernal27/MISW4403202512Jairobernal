{
    "info": {
        "_postman_id": "5692fc28-195b-4380-b4a1-53230f5cecea",
        "name": "Platos",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "2331986"
    },
    "item": [
        {
            "name": "Crear Plato valido",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "var data = pm.response.json()",
                            "pm.globals.set(\"plato_id\", data.id);",
                            "",
                            "pm.test(\"Status code is 201\", function () {",
                            "   pm.response.to.have.status(201);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"nombre\": \"Pizza Margherita\",\n    \"descripcion\": \"Pizza tradicional italiana con tomate, mozzarella y albahaca.\",\n    \"precio\": 25000,\n    \"categoria\": \"plato fuerte\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{API_URL}}/dishes/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ""
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Crear Plato Invalido",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 400\", function () {",
                            "   pm.response.to.have.status(400);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"nombre\": \"Pizza Margherita\",\n    \"descripcion\": \"Pizza tradicional italiana.\",\n    \"precio\": -100,\n    \"categoria\": \"invalida\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{API_URL}}/dishes/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ""
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Obtener todos los platos",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Number of platos > ' + 0, function () {",
                            "   var data = pm.response.json()",
                            "   pm.expect(data.length).to.greaterThan(0)",
                            "});",
                            "",
                            "pm.test(\"Status code is 200\", function () {",
                            "   pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{API_URL}}/dishes/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ""
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Obtener plato por id",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "   pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{API_URL}}/dishes/:id/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ":id",
                        ""
                    ],
                    "variable": [
                        {
                            "key": "id",
                            "value": "{{plato_id}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Obtener plato por id que no existe",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 404\", function () {",
                            "    pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"Get expected error message with UUID\", function () {",
                            "    const data = pm.response.json();",
                            "    const regex = /^Plato with id [0-9a-fA-F-]{36} not found$/;",
                            "",
                            "    pm.expect(data.message).to.match(regex);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{API_URL}}/dishes/:id/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ":id",
                        ""
                    ],
                    "variable": [
                        {
                            "key": "id",
                            "value": "{{$randomUUID}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Actualizar un plato",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "   pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "PUT",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"nombre\": \"Tiramisú\",\n    \"descripcion\": \"Postre italiano con café y queso mascarpone.\",\n    \"precio\": 12000,\n    \"categoria\": \"postre\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{API_URL}}/dishes/:id/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ":id",
                        ""
                    ],
                    "variable": [
                        {
                            "key": "id",
                            "value": "{{plato_id}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Actualizar un plato con datos invalidos",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 400\", function () {",
                            "   pm.response.to.have.status(400);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "PUT",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"nombre\": null,\n    \"descripcion\": \"\",\n    \"precio\": -100,\n    \"categoria\": \"invalida\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{API_URL}}/dishes/:id/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ":id",
                        ""
                    ],
                    "variable": [
                        {
                            "key": "id",
                            "value": "{{plato_id}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Actualizar un plato que no existe",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 404\", function () {",
                            "    pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"Get expected error message with UUID\", function () {",
                            "    const data = pm.response.json();",
                            "    const regex = /^Plato with id [0-9a-fA-F-]{36} not found$/;",
                            "",
                            "    pm.expect(data.message).to.match(regex);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "PUT",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"nombre\": \"Tiramisú\",\n    \"descripcion\": \"Postre italiano con café y queso mascarpone.\",\n    \"precio\": 12000,\n    \"categoria\": \"postre\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{API_URL}}/dishes/:id/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ":id",
                        ""
                    ],
                    "variable": [
                        {
                            "key": "id",
                            "value": "{{$randomUUID}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Eliminar plato",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "   pm.response.to.have.status(204);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                    "raw": "{{API_URL}}/dishes/:id/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ":id",
                        ""
                    ],
                    "variable": [
                        {
                            "key": "id",
                            "value": "{{plato_id}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Eliminar plato que no existe",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 404\", function () {",
                            "    pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"Get expected error message with UUID\", function () {",
                            "    const data = pm.response.json();",
                            "    const regex = /^Plato with id [0-9a-fA-F-]{36} not found$/;",
                            "",
                            "    pm.expect(data.message).to.match(regex);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                    "raw": "{{API_URL}}/dishes/:id/",
                    "host": [
                        "{{API_URL}}"
                    ],
                    "path": [
                        "dishes",
                        ":id",
                        ""
                    ],
                    "variable": [
                        {
                            "key": "id",
                            "value": "{{$randomUUID}}"
                        }
                    ]
                }
            },
            "response": []
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "packages": {},
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "packages": {},
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "API_URL",
            "value": "localhost:3000/api/v1",
            "type": "string"
        }
    ]
}